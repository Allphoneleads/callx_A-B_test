/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'nazeemn' at '18/5/15 2:08 PM' with Gradle 2.3
 */

buildscript {
    
    repositories {
        jcenter()
        mavenCentral()
    }
    
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.1.7.RELEASE'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.0'
        classpath 'net.saliman:gradle-properties-plugin:1.4.2'
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.5'
        
    }

}

// Application Plugins
apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'flyway'
apply plugin: 'net.saliman.properties'
apply plugin: 'org.hidetake.ssh'
// Developer Plugins
apply plugin: 'eclipse'

mainClassName = 'com.allphoneleads.api.MainApplication'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

jar {

    baseName = rootProject.name
    version = version

}


repositories {

    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }

}
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

configurations {

    providedRuntime

}

dependencies {

    compile (
        'org.springframework.boot:spring-boot-starter-web:1.2.0.RELEASE',
        'org.springframework.boot:spring-boot-starter-actuator:1.2.0.RELEASE',
        'org.springframework.boot:spring-boot-starter-data-jpa:1.2.0.RELEASE',
        'org.springframework:spring-context-support:3.2.8.RELEASE',
        'org.springframework.boot:spring-boot-starter-security:1.2.0.RELEASE',
        'org.springframework:spring-mock:2.0.6',
        'com.googlecode.json-simple:json-simple:1.1',
       //'org.springframework.cloud:spring-cloud-aws-context:1.0.2.RELEASE',
        'org.jadira.usertype:usertype.core:3.1.0.CR1',
        'joda-time:joda-time:2.3',
        'mysql:mysql-connector-java:5.1.32',
		'com.plivo:plivo-java:3.0.6',
		'org.apache.httpcomponents:httpclient:4.5',
		'commons-fileupload:commons-fileupload:1.3.1',
		'commons-io:commons-io:2.4',
		'org.apache.velocity:velocity:1.6.4',
		'com.sun.mail:javax.mail:1.5.4',
		'jaf:activation:1.0.2',
		'commons-beanutils:commons-beanutils:1.9.2',
		'com.amazonaws:aws-java-sdk:1.10.2',
		'com.ivona:ivona-speechcloud-sdk-java:0.3.0',
		'com.whalin:Memcached-Java-Client:3.0.2',
		'commons-pool:commons-pool:1.6',
		'com.ivona:ivona-speechcloud-sdk-java:1.0.0',
		'com.indeed:proctor-common:1.1.9',
		'com.indeed:proctor-consumer:1.1.9',
		'com.indeed:proctor-codegen:1.1.9',
		'com.indeed:proctor-maven-plugin:1.1.9',
		'com.indeed:util-core:1.0.17',
		'com.github.spullara.mustache.java:compiler:0.8.18',
		'ch.qos.logback:logback-classic:1.1.7',
		'ch.qos.logback:logback-core:1.1.7',
		'net.sourceforge.javacsv:javacsv:2.0',
		'org.quartz-scheduler:quartz:2.2.1',
		'org.springframework.boot:spring-boot-starter-websocket',
		'com.mashape.unirest:unirest-java:1.4.7',
		'org.springframework:spring-messaging',
        'javax.servlet:javax.servlet-api:3.1.0',
		'org.apache.commons:commons-lang3:3.0',
		'com.google.api-ads:ads-lib:2.22.0',
  		'com.google.api-ads:adwords-axis:2.22.0',
 		'com.google.http-client:google-http-client-jackson2:1.22.0',
 		'com.google.guava:guava:18.0',
		'com.google.inject:guice:4.1.0')
		 
    
    providedRuntime (
        'org.springframework.boot:spring-boot-starter-tomcat:1.2.0.RELEASE'
    )

    testCompile (
        'org.springframework.boot:spring-boot-starter-test:1.2.0.RELEASE'
    )
    
 }
 
 flyway {
    url = datasourceURL
    user = datasourceUsername
    password = datasourcePassword
}   


task cleanApplicationProperties(type: Delete) {
  delete 'src/main/resources/application.properties','src/main/resources/logback.xml'
   
}

task addApplicationProperties(type: Copy) {
    requiredProperties "springApplicationName", "datasourceURL", "datasourceUsername", "datasourcePassword", "datasourceDriverClassName", "hibernateDialect"
    from 'gradle/templates'
    include 'application.properties','logback.xml'
    into 'src/main/resources'
    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: project.filterTokens)
}

task addApplicationfiles(type: Copy) {
    from 'target/generated-sources/proctor/com/allphoneleads/api/proctor'
    include '*.java'
    into 'src/main/java/com/allphoneleads/api/proctor'
}

addApplicationProperties.dependsOn cleanApplicationProperties
addApplicationfiles.dependsOn addApplicationProperties
compileJava.dependsOn addApplicationfiles
